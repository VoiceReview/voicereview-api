syntax = "proto3";

package user;

service UserService {
    rpc FindOne (UserByUuid) returns (User);
    rpc FindAll (stream UserByUuid) returns (stream User);
    rpc CreateUser (CreateUserRequest) returns (CreateUserResponse);
    rpc UpdateUser (UpdateUserRequest) returns (User);
    rpc DeleteUser (UserByUuid) returns (Empty);
    rpc VerifyUser (VerifyUserRequest) returns (User);
    rpc GetUserByCredentials (UserCredentials) returns (User);
    rpc ChangeUserRole (ChangeUserRoleRequest) returns (User);
}

message UserByUuid {
    string uuid = 1;
}

message CreateUserResponse {
    string refresh_token = 1;
    string access_token = 2;
}

message User {
    string uuid = 1;
    string email = 2;
    string phone = 3;
    string password = 4;
    bool verified = 5;
    UserRole role = 6;
    string created_at = 7;
    string updated_at = 8;
}

enum UserRole {
    ANON = 0;
    ADMIN = 1;
    USER = 2;
    MODERATOR = 3;
}

message CreateUserRequest {
    string email = 1;
    string phone = 2;
    string password = 3;
    UserRole role = 4;
}

message UpdateUserRequest {
    string uuid = 1;
    string email = 2;
    string phone = 3;
    string password = 4;
    UserRole role = 5;
}

message VerifyUserRequest {
    string uuid = 1;
    bool verified = 2;
}

message UserCredentials {
    string email = 1;
    string password = 2;
}

message ChangeUserRoleRequest {
    string uuid = 1;
    UserRole newRole = 2;
}

message Empty {}
